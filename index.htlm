<!DOCTYPE html>
<html lang="vi">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>❤ Ngoc Vy</title>
<style>
  html,body{height:100%;margin:0}
  body{
    background:#000;overflow:hidden;
    display:flex;align-items:center;justify-content:center
  }
  #stage{position:fixed;inset:0}
  .center-title{
    position:relative;z-index:2;text-align:center;line-height:1.1;
    font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial;
  }
  .center-title .heart{
    display:block;font-size:64px;margin-bottom:8px;
    color:#1e90ff;filter:drop-shadow(0 0 10px rgba(30,144,255,.8));
  }
  .center-title .name{
    font-size:56px;font-weight:800;letter-spacing:.5px;color:#fff;
    text-shadow:0 0 10px rgba(255,255,255,.25), 0 0 24px rgba(30,144,255,.35);
  }
</style>
</head>
<body>
<canvas id="stage"></canvas>

<div class="center-title" aria-label="Ngoc Vy">
  <span class="heart">❤</span>
  <div class="name">Ngoc Vy</div>
</div>

<script>
/* ========= Floating Blue Hearts ========= */
const canvas = document.getElementById('stage');
const ctx = canvas.getContext('2d');

function resize(){
  canvas.width  = innerWidth;
  canvas.height = innerHeight;
}
addEventListener('resize', resize, {passive:true}); resize();

// Draw a vector heart at (x,y) with size s and fillStyle
function drawHeart(x,y,s,fill,alpha=1){
  const k = s/16; // scale factor (base path roughly 16x16)
  ctx.save();
  ctx.translate(x,y);
  ctx.scale(k,k);
  ctx.beginPath();
  // classic heart path centered around (0,0)
  ctx.moveTo(0,-5);
  ctx.bezierCurveTo(0,-9,6,-9,6,-5);
  ctx.bezierCurveTo(6,-2,3,0,0,3);
  ctx.bezierCurveTo(-3,0,-6,-2,-6,-5);
  ctx.bezierCurveTo(-6,-9,0,-9,0,-5);
  ctx.closePath();
  ctx.globalAlpha = alpha;
  ctx.fillStyle = fill;
  ctx.shadowColor = 'rgba(30,144,255,0.6)';
  ctx.shadowBlur = 12;
  ctx.fill();
  ctx.restore();
}

const BLUE = '#1e90ff';

function rand(a,b){ return Math.random()*(b-a)+a }

class Particle{
  constructor(){
    this.reset(true);
  }
  reset(first=false){
    this.x = first ? rand(0, canvas.width)  : (Math.random()<.5 ? -20 : canvas.width+20);
    this.y = first ? rand(0, canvas.height) : rand(0, canvas.height);
    const speed = rand(12, 40);
    const dir = rand(-Math.PI, Math.PI);
    this.vx = Math.cos(dir)*speed;
    this.vy = Math.sin(dir)*speed;
    this.size = rand(10, 36);
    this.alpha = rand(0.35, 0.9);
    this.spin = rand(-0.8, 0.8); // gentle drift curve
    this.life = 0;
    this.maxLife = rand(8, 18);
  }
  update(dt){
    this.life += dt;
    this.vx += Math.sin(this.life*this.spin)*0.05;
    this.vy += Math.cos(this.life*this.spin)*0.05;

    this.x += this.vx*dt;
    this.y += this.vy*dt;

    // wrap softly
    if(this.x < -40) this.x = canvas.width+40;
    if(this.x > canvas.width+40) this.x = -40;
    if(this.y < -40) this.y = canvas.height+40;
    if(this.y > canvas.height+40) this.y = -40;

    if(this.life > this.maxLife) this.reset();
  }
  draw(){
    drawHeart(this.x, this.y, this.size, BLUE, this.alpha);
  }
}

const COUNT = Math.min(160, Math.floor((canvas.width*canvas.height)/18000));
const particles = Array.from({length: COUNT}, _=>new Particle());

let last=0;
function tick(ts){
  if(!last) last = ts;
  const dt = Math.min(0.033, (ts - last)/1000); // clamp
  last = ts;

  // clear
  ctx.clearRect(0,0,canvas.width,canvas.height);

  // subtle background glow dots
  for(let i=0;i<5;i++){
    ctx.beginPath();
    const r = rand(40,80);
    ctx.arc(rand(0,canvas.width), rand(0,canvas.height), r, 0, Math.PI*2);
    ctx.fillStyle = 'rgba(30,144,255,0.02)';
    ctx.fill();
  }

  // update & draw particles
  particles.forEach(p=>{ p.update(dt); p.draw(); });

  requestAnimationFrame(tick);
}
requestAnimationFrame(tick);
</script>
</body>
</html>
